# This is a basic workflow to help you get started with Actions

name: Tests

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-run-ctest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: | 
          sudo apt-get update
          sudo apt-get install cmake ninja-build gcc-10 clang-11
          echo printing versions
          cmake --version
          ninja --version
          g++-10 --version
          clang++-11 --version
          
      - name: g++ release unit tests
        run: |
          mkdir build_gcc_release && cd build_gcc_release
          cmake -DCMAKE_BUILD_TYPE=Release -G Ninja -DCMAKE_CXX_COMPILER=g++-10 -DBUILD_DOC=OFF ..
          ninja
          ctest --output-on-failure
          cd ..
          
      - name: clang release unit tests
        run: |
          mkdir build_clang_release && cd build_clang_release
          cmake -DCMAKE_BUILD_TYPE=Release -G Ninja -DCMAKE_CXX_COMPILER=clang++-11 -DBUILD_DOC=OFF ..
          ninja
          ctest --output-on-failure
          cd ..
    
      - name: clang debug with sanitizers
        run: |
          mkdir build_clang_debug && cd build_clang_debug
          cmake -DCMAKE_BUILD_TYPE=Debug -G Ninja -DCMAKE_CXX_COMPILER=clang++-11 -DBUILD_DOC=OFF -DECM_ENABLE_SANITIZERS='address;leak;undefined' ..
          ninja
          ctest --output-on-failure
          cd ..

      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
